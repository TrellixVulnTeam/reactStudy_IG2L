{"ast":null,"code":"var _jsxFileName = \"/Users/parkjiwon/Desktop/react-start/begin-react/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useState, useMemo, useCallback } from 'react';\nimport Counter from './Counter';\nimport CreateUser from './CreateUser';\nimport InputSample from './InputSample';\nimport UserList from './UserList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction countActiveUsers(users) {\n  console.log('활성 사용자 수를 세는중 ... ');\n  return users.filter(user => user.active).length; // return users.filter(user => user.acitve).length;\n}\n\nfunction App() {\n  _s();\n\n  const [inputs, setInputs] = useState({\n    username: '',\n    email: ''\n  });\n  const {\n    username,\n    email\n  } = inputs;\n  const onChange = useCallback(e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setInputs({ ...inputs,\n      [name]: value\n    });\n  }, [inputs]);\n  const [users, setUsers] = useState([{\n    id: 1,\n    username: 'test1',\n    email: 'test@naver.com',\n    active: true\n  }, {\n    id: 2,\n    username: 'test1',\n    email: 'test@naver.com',\n    active: false\n  }, {\n    id: 3,\n    username: 'test1',\n    email: 'test@naver.com',\n    active: false\n  }]);\n  const nextId = useRef(4);\n  const onCreate = useCallback(() => {\n    const user = {\n      id: nextId.current,\n      username,\n      email\n    };\n    setUsers([...users, user]);\n    setInputs({\n      username: '',\n      email: ''\n    });\n    console.log(nextId.current);\n    nextId.current += 1;\n  }, [username, email, users]);\n  const onRemove = useCallback(id => {\n    setUsers(users.filter(user => user.id !== id));\n  }, [users]);\n\n  const onToggle = id => {\n    setUsers(users.map(user => user.id === id ? { ...user,\n      active: !user.active\n    } : user));\n  };\n\n  const count = useMemo(() => countActiveUsers(users), [users]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(CreateUser, {\n      username: username,\n      email: email,\n      onChange: onChange,\n      onCreate: onCreate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(UserList, {\n      users: users,\n      onRemove: onRemove,\n      onToggle: onToggle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"\\uD65C\\uC131 \\uC0AC\\uC6A9\\uC790 \\uC218 : \", count]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(App, \"/AcOPRr/fjOLfMbcDxI3eMCsfQw=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/parkjiwon/Desktop/react-start/begin-react/src/App.js"],"names":["React","useRef","useState","useMemo","useCallback","Counter","CreateUser","InputSample","UserList","countActiveUsers","users","console","log","filter","user","active","length","App","inputs","setInputs","username","email","onChange","e","name","value","target","setUsers","id","nextId","onCreate","current","onRemove","onToggle","map","count"],"mappings":"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","sourcesContent":["import React,{useRef, useState, useMemo, useCallback} from 'react';\nimport Counter from './Counter';\nimport CreateUser from './CreateUser';\nimport InputSample from './InputSample';\nimport UserList from './UserList';\n\nfunction countActiveUsers(users){\n    console.log('활성 사용자 수를 세는중 ... ');\n\n    return users.filter(user => user.active).length\n    // return users.filter(user => user.acitve).length;\n}\n\nfunction App(){\n    const [inputs,setInputs] = useState({\n        username:'',\n        email:'',\n    });\n    const {username,email} = inputs;\n    const onChange = useCallback(e =>{\n        const {name, value} = e.target;\n        setInputs({\n            ...inputs,\n            [name]:value\n        });\n    },[inputs]);\n    const [users,setUsers] = useState([\n        {\n            id: 1,\n            username: 'test1',\n            email: 'test@naver.com',\n            active: true,\n        },\n        {\n            id: 2,\n            username: 'test1',\n            email: 'test@naver.com',\n            active: false,\n        },\n        {\n            id: 3,\n            username: 'test1',\n            email: 'test@naver.com',\n            active: false,\n        },\n    ]);\n    const nextId = useRef(4);\n    \n    const onCreate = useCallback(() =>{\n        const user = {\n            id: nextId.current,\n            username,\n            email,\n        };\n        setUsers([...users, user]);\n        setInputs({\n            username:'',\n            email:''\n        })\n        console.log(nextId.current);\n        nextId.current += 1;\n    },[username,email,users])\n    const onRemove = useCallback(id => {\n        setUsers(users.filter(user => user.id !== id));\n    },[users])\n    const onToggle = id =>{\n        setUsers(users.map(\n            user => user.id === id\n            ? { ...user, active: !user.active}\n            : user\n        ))\n    }\n    const count = useMemo(() => countActiveUsers(users),[users]);\n    return(\n        <>\n            <CreateUser \n                username={username}\n                email={email} \n                onChange={onChange} \n                onCreate={onCreate}\n            />\n            <UserList users={users} onRemove={onRemove} onToggle={onToggle}/>\n            <div>활성 사용자 수 : {count}</div>\n        </>\n    )\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}