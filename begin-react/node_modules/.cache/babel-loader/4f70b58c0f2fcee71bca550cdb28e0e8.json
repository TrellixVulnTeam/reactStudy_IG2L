{"ast":null,"code":"var _jsxFileName = \"/Users/parkjiwon/Desktop/react-start/begin-react/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useReducer, useMemo, useCallback } from 'react';\nimport Counter from './Counter';\nimport CreateUser from './CreateUser';\nimport InputSample from './InputSample';\nimport UserList from './UserList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction countActiveUsers(users) {\n  console.log('활성 사용자 수를 세는중 ... ');\n  return users.filter(user => user.active).length; // return users.filter(user => user.acitve).length;\n}\n\nconst initialState = {\n  inputs: {\n    username: '',\n    email: ''\n  },\n  users: [{\n    id: 1,\n    username: 'test1',\n    email: 'test@naver.com',\n    active: true\n  }, {\n    id: 2,\n    username: 'test1',\n    email: 'test@naver.com',\n    active: false\n  }, {\n    id: 3,\n    username: 'test1',\n    email: 'test@naver.com',\n    active: false\n  }]\n};\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case 'CHANGE_INPUT':\n      return { ...state,\n        inputs: { ...state.inputs,\n          [action.name]: action.value\n        }\n      };\n\n      defualt: throw new Error('unhandled action');\n\n  }\n}\n\nconst onCreate = useCallback(() => {\n  dispatch({\n    type: 'CREATE_USER',\n    user: {\n      id: 1,\n      username,\n      email\n    }\n  });\n}, [username, email]);\n\nfunction App() {\n  _s();\n\n  const [state, dispatch] = useReducer(reducer, initialState);\n  const {\n    users\n  } = state;\n  const {\n    username,\n    email\n  } = state.inputs;\n  const onChange = useCallback(e => {\n    const {\n      name,\n      value\n    } = e.target;\n    dispatch({\n      type: 'CHANGE_INPUT',\n      name,\n      value\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(CreateUser, {\n      username: username,\n      email: email,\n      onChange: onChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(UserList, {\n      users: {\n        users\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"\\uD65C\\uC131 \\uC0AC\\uC6A9\\uC790 \\uC218 : 0\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(App, \"dNQpN9NgNTazf1FkBA3gkwMqEjc=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/parkjiwon/Desktop/react-start/begin-react/src/App.js"],"names":["React","useRef","useReducer","useMemo","useCallback","Counter","CreateUser","InputSample","UserList","countActiveUsers","users","console","log","filter","user","active","length","initialState","inputs","username","email","id","reducer","state","action","type","name","value","defualt","Error","onCreate","dispatch","App","onChange","e","target"],"mappings":"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","sourcesContent":["import React,{useRef, useReducer, useMemo, useCallback} from 'react';\nimport Counter from './Counter';\nimport CreateUser from './CreateUser';\nimport InputSample from './InputSample';\nimport UserList from './UserList';\n\nfunction countActiveUsers(users){\n    console.log('활성 사용자 수를 세는중 ... ');\n\n    return users.filter(user => user.active).length\n    // return users.filter(user => user.acitve).length;\n}\nconst initialState = {\n    inputs:{\n        username:'',\n        email:'',\n    },\n    users:[\n        {\n            id: 1,\n            username: 'test1',\n            email: 'test@naver.com',\n            active: true,\n        },\n        {\n            id: 2,\n            username: 'test1',\n            email: 'test@naver.com',\n            active: false,\n        },\n        {\n            id: 3,\n            username: 'test1',\n            email: 'test@naver.com',\n            active: false,\n        },\n    ]\n}\nfunction reducer(state, action){\n    switch (action.type){\n        case 'CHANGE_INPUT':\n            return{\n                ...state,\n                inputs:{\n                    ...state.inputs,\n                    [action.name] : action.value\n                }\n            };\n            defualt:\n            throw new Error('unhandled action');\n    }\n}\nconst onCreate = useCallback(()=> {\n    dispatch({\n        type: 'CREATE_USER',\n        user:{\n            id: 1,\n            username,\n            email,\n\n        }\n    })\n},[username,email])\nfunction App(){\n    const [state,dispatch] = useReducer(reducer, initialState);\n    const {users} = state;\n    const {username, email} = state.inputs;\n    const onChange = useCallback(e => {\n        const { name, value} = e.target;\n        dispatch({\n            type: 'CHANGE_INPUT',\n            name,\n            value,\n        })\n    },[])\n    return(\n        <>\n            <CreateUser \n            username={username} \n            email={email}\n            onChange={onChange}\n            />\n            <UserList users={{users}}/>\n            <div>활성 사용자 수 : 0</div>\n        </>\n    )\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}