{"ast":null,"code":"var _jsxFileName = \"/Users/parkjiwon/Desktop/react-start/begin-react/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useReducer, useMemo, useCallback } from 'react';\nimport UserList from './UserList';\nimport CreateUser from './CreateUser';\nimport useInputs from './useInputs';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction countActiveUsers(users) {\n  console.log('활성 사용자 수를 세는중...');\n  return users.filter(user => user.active).length;\n}\n\nconst initialState = {\n  users: [{\n    id: 1,\n    username: 'velopert',\n    email: 'public.velopert@gmail.com',\n    active: true\n  }, {\n    id: 2,\n    username: 'tester',\n    email: 'tester@example.com',\n    active: false\n  }, {\n    id: 3,\n    username: 'liz',\n    email: 'liz@example.com',\n    active: false\n  }]\n};\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case 'CREATE_USER':\n      return {\n        inputs: initialState.inputs,\n        users: state.users.concat(action.user)\n      };\n\n    case 'TOGGLE_USER':\n      return { ...state,\n        users: state.users.map(user => user.id === action.id ? { ...user,\n          active: !user.active\n        } : user)\n      };\n\n    case 'REMOVE_USER':\n      return { ...state,\n        users: state.users.filter(user => user.id !== action.id)\n      };\n\n    default:\n      return state;\n  }\n}\n\nfunction App() {\n  _s();\n\n  const [state, dispatch] = useReducer(reducer, initialState);\n  const [form, onChange, reset] = useInputs({\n    username: '',\n    email: ''\n  });\n  const {\n    username,\n    email\n  } = form;\n  const nextId = useRef(4);\n  const {\n    users\n  } = state;\n  const onCreate = useCallback(() => {\n    dispatch({\n      type: 'CREATE_USER',\n      user: {\n        id: nextId.current,\n        username,\n        email\n      }\n    });\n    nextId.current += 1;\n    reset();\n  }, [username, email, reset]);\n  const onToggle = useCallback(id => {\n    dispatch({\n      type: 'TOGGLE_USER',\n      id\n    });\n  }, []);\n  const onRemove = useCallback(id => {\n    dispatch({\n      type: 'REMOVE_USER',\n      id\n    });\n  }, []);\n  const count = useMemo(() => countActiveUsers(users), [users]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(CreateUser, {\n      username: username,\n      email: email,\n      onChange: onChange,\n      onCreate: onCreate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(UserList, {\n      users: users,\n      onToggle: onToggle,\n      onRemove: onRemove\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"\\uD65C\\uC131\\uC0AC\\uC6A9\\uC790 \\uC218 : \", count]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(App, \"mpHiD3tZVG6Jnlys2prjpMlLnr8=\", false, function () {\n  return [useInputs];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/parkjiwon/Desktop/react-start/begin-react/src/App.js"],"names":["React","useRef","useReducer","useMemo","useCallback","UserList","CreateUser","useInputs","countActiveUsers","users","console","log","filter","user","active","length","initialState","id","username","email","reducer","state","action","type","inputs","concat","map","App","dispatch","form","onChange","reset","nextId","onCreate","current","onToggle","onRemove","count"],"mappings":"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","sourcesContent":["import React, { useRef, useReducer, useMemo, useCallback } from 'react';\nimport UserList from './UserList';\nimport CreateUser from './CreateUser';\nimport useInputs from './useInputs';\nfunction countActiveUsers(users) {\n  console.log('활성 사용자 수를 세는중...');\n  return users.filter(user => user.active).length;\n}\n\nconst initialState = {\n\n  users: [\n    {\n      id: 1,\n      username: 'velopert',\n      email: 'public.velopert@gmail.com',\n      active: true\n    },\n    {\n      id: 2,\n      username: 'tester',\n      email: 'tester@example.com',\n      active: false\n    },\n    {\n      id: 3,\n      username: 'liz',\n      email: 'liz@example.com',\n      active: false\n    }\n  ]\n};\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case 'CREATE_USER':\n      return {\n        inputs: initialState.inputs,\n        users: state.users.concat(action.user)\n      };\n    case 'TOGGLE_USER':\n      return {\n        ...state,\n        users: state.users.map(user =>\n          user.id === action.id ? { ...user, active: !user.active } : user\n        )\n      };\n    case 'REMOVE_USER':\n      return {\n        ...state,\n        users: state.users.filter(user => user.id !== action.id)\n      };\n    default:\n      return state;\n  }\n}\n\nfunction App() {\n  const [state, dispatch] = useReducer(reducer, initialState);\n  const [form,onChange,reset] = useInputs({\n      username:'',\n      email:'',\n  })\n  const {username, email} = form;\n  const nextId = useRef(4);\n\n  const { users } = state;\n\n\n  const onCreate = useCallback(() => {\n    dispatch({\n      type: 'CREATE_USER',\n      user: {\n        id: nextId.current,\n        username,\n        email\n      }\n    });\n    nextId.current += 1;\n    reset();\n  }, [username, email,reset]);\n\n  const onToggle = useCallback(id => {\n    dispatch({\n      type: 'TOGGLE_USER',\n      id\n    });\n  }, []);\n\n  const onRemove = useCallback(id => {\n    dispatch({\n      type: 'REMOVE_USER',\n      id\n    });\n  }, []);\n\n  const count = useMemo(() => countActiveUsers(users), [users]);\n  return (\n    <>\n      <CreateUser\n        username={username}\n        email={email}\n        onChange={onChange}\n        onCreate={onCreate}\n      />\n      <UserList users={users} onToggle={onToggle} onRemove={onRemove} />\n      <div>활성사용자 수 : {count}</div>\n    </>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}