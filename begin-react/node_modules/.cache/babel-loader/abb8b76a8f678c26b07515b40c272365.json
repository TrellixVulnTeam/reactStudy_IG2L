{"ast":null,"code":"var _jsxFileName = \"/Users/parkjiwon/Desktop/react-start/begin-react/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useState } from 'react';\nimport Counter from './Counter';\nimport CreateUser from './CreateUser';\nimport InputSample from './InputSample';\nimport UserList from './UserList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [inputs, setInputs] = useState({\n    username: '',\n    email: ''\n  });\n  const {\n    username,\n    email\n  } = inputs;\n\n  const onChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setInputs({ ...inputs,\n      [name]: value\n    });\n  };\n\n  const [users, setUsers] = useState([{\n    id: 1,\n    username: 'test1',\n    email: 'test@naver.com'\n  }, {\n    id: 1,\n    username: 'test1',\n    email: 'test@naver.com'\n  }, {\n    id: 1,\n    username: 'test1',\n    email: 'test@naver.com'\n  }]);\n  const nextId = useRef(4);\n\n  const onCreate = () => {\n    setInputs({\n      username: '',\n      email: ''\n    });\n    console.log(nextId.current);\n    nextId.current += 1;\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(CreateUser, {\n      username: username,\n      email: email,\n      onChange: onChange,\n      onCreate: onCreate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(UserList, {\n      users: users\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(App, \"Wbp0Y0NwRl15nSZSEM0N7xdmvWA=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/parkjiwon/Desktop/react-start/begin-react/src/App.js"],"names":["React","useRef","useState","Counter","CreateUser","InputSample","UserList","App","inputs","setInputs","username","email","onChange","e","name","value","target","users","setUsers","id","nextId","onCreate","console","log","current"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,MAAd,EAAsBC,QAAtB,QAAqC,OAArC;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,QAAP,MAAqB,YAArB;;;;AAEA,SAASC,GAAT,GAAc;AAAA;;AACV,QAAM,CAACC,MAAD,EAAQC,SAAR,IAAqBP,QAAQ,CAAC;AAChCQ,IAAAA,QAAQ,EAAC,EADuB;AAEhCC,IAAAA,KAAK,EAAC;AAF0B,GAAD,CAAnC;AAIA,QAAM;AAACD,IAAAA,QAAD;AAAUC,IAAAA;AAAV,MAAmBH,MAAzB;;AACA,QAAMI,QAAQ,GAAGC,CAAC,IAAG;AACjB,UAAM;AAACC,MAAAA,IAAD;AAAOC,MAAAA;AAAP,QAAgBF,CAAC,CAACG,MAAxB;AACAP,IAAAA,SAAS,CAAC,EACN,GAAGD,MADG;AAEN,OAACM,IAAD,GAAOC;AAFD,KAAD,CAAT;AAIH,GAND;;AAOA,QAAM,CAACE,KAAD,EAAOC,QAAP,IAAmBhB,QAAQ,CAAC,CAC9B;AACIiB,IAAAA,EAAE,EAAE,CADR;AAEIT,IAAAA,QAAQ,EAAE,OAFd;AAGIC,IAAAA,KAAK,EAAE;AAHX,GAD8B,EAM9B;AACIQ,IAAAA,EAAE,EAAE,CADR;AAEIT,IAAAA,QAAQ,EAAE,OAFd;AAGIC,IAAAA,KAAK,EAAE;AAHX,GAN8B,EAW9B;AACIQ,IAAAA,EAAE,EAAE,CADR;AAEIT,IAAAA,QAAQ,EAAE,OAFd;AAGIC,IAAAA,KAAK,EAAE;AAHX,GAX8B,CAAD,CAAjC;AAiBA,QAAMS,MAAM,GAAGnB,MAAM,CAAC,CAAD,CAArB;;AAEA,QAAMoB,QAAQ,GAAG,MAAK;AAClBZ,IAAAA,SAAS,CAAC;AACNC,MAAAA,QAAQ,EAAC,EADH;AAENC,MAAAA,KAAK,EAAC;AAFA,KAAD,CAAT;AAIAW,IAAAA,OAAO,CAACC,GAAR,CAAYH,MAAM,CAACI,OAAnB;AACAJ,IAAAA,MAAM,CAACI,OAAP,IAAkB,CAAlB;AACH,GAPD;;AASA,sBACI;AAAA,4BACI,QAAC,UAAD;AACI,MAAA,QAAQ,EAAEd,QADd;AAEI,MAAA,KAAK,EAAEC,KAFX;AAGI,MAAA,QAAQ,EAAEC,QAHd;AAII,MAAA,QAAQ,EAAES;AAJd;AAAA;AAAA;AAAA;AAAA,YADJ,eAOI,QAAC,QAAD;AAAU,MAAA,KAAK,EAAEJ;AAAjB;AAAA;AAAA;AAAA;AAAA,YAPJ;AAAA,kBADJ;AAWH;;GApDQV,G;;KAAAA,G;AAsDT,eAAeA,GAAf","sourcesContent":["import React,{useRef, useState} from 'react';\nimport Counter from './Counter';\nimport CreateUser from './CreateUser';\nimport InputSample from './InputSample';\nimport UserList from './UserList';\n\nfunction App(){\n    const [inputs,setInputs] = useState({\n        username:'',\n        email:'',\n    });\n    const {username,email} = inputs;\n    const onChange = e =>{\n        const {name, value} = e.target;\n        setInputs({\n            ...inputs,\n            [name]:value\n        });\n    };\n    const [users,setUsers] = useState([\n        {\n            id: 1,\n            username: 'test1',\n            email: 'test@naver.com',\n        },\n        {\n            id: 1,\n            username: 'test1',\n            email: 'test@naver.com',\n        },\n        {\n            id: 1,\n            username: 'test1',\n            email: 'test@naver.com',\n        },\n    ]);\n    const nextId = useRef(4);\n    \n    const onCreate = () =>{\n        setInputs({\n            username:'',\n            email:''\n        })\n        console.log(nextId.current);\n        nextId.current += 1;\n    }\n\n    return(\n        <>\n            <CreateUser \n                username={username}\n                email={email} \n                onChange={onChange} \n                onCreate={onCreate}\n            />\n            <UserList users={users}/>\n        </>\n    )\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}